<?xml version="1.0" encoding="utf-8"?>
<topic id="0323ba32-e52b-47a7-88a0-9f8b1d2e5ec5" revisionNumber="1">
  <developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>To get the license published by license publisher, you can use
    <codeEntityReference>T:DevZest.Licensing.LicenseClient</codeEntityReference> class, which is a WCF (Windows Communication Foundation)
    client. For more information on WCF client configuration, refer to WCF documentation.</para>
      <autoOutline />
    </introduction>
    <section address="Section1">
      <title>Programming LicenseClient Class</title>
      <content>
        <para>The following sample code demonstrates how to program
      <codeEntityReference>T:DevZest.Licensing.LicenseClient</codeEntityReference> class:</para>
        <code lang="C#"><![CDATA[
        private static void GetLicense(LicenseCategory licenseCategory)
        {
            LicenseClient licenseClient = new LicenseClient(LicenseClient.PublicKeyXmlFromAssembly(Assembly.GetExecutingAssembly()));
            try
            {
                LicensePublisherResponse response = licenseClient.GetLicense(
                    Product,
                    Assembly.GetExecutingAssembly().GetName().Version,
                    s_licenseKeys[(int)licenseCategory],
                    licenseCategory.ToString(),
                    "Test User",
                    "Test Company",
                    "testuser@test.com",
                    MachineLicense.LocalMachineData);
                License license = response.License;
                if (license == null)
                    Console.WriteLine("ERROR: " + response.ErrorMessage);
                else
                {
                    File.WriteAllText(Assembly.GetExecutingAssembly().Location + ".lic", license.SignedString);
                    LicenseManager.Reset();
                }

                licenseClient.Close();
            }
            catch (CommunicationException exception)
            {
                Console.WriteLine("EXCEPTION: " + exception.Message);
                licenseClient.Abort();
            }
        }
		]]></code>
        <code lang="VB.Net"><![CDATA[
    Private Sub GetLicense(ByVal licCategory As LicenseCategory)
        Dim licClient = New LicenseClient(LicenseClient.PublicKeyXmlFromAssembly(Assembly.GetExecutingAssembly()))
        Try
            Dim response As LicensePublisherResponse = licClient.GetLicense( _
                Product, _
                Assembly.GetExecutingAssembly().GetName().Version, _
                s_licenseKeys(CType(licCategory, Integer)), _
                licCategory.ToString(), _
                "Test User", _
                "Test Company", _
                "testuser@test.com", _
                MachineLicense.LocalMachineData)
            Dim lic As License = response.License
            If lic Is Nothing Then
                Console.WriteLine("ERROR: " + response.ErrorMessage)
            Else
                File.WriteAllText(Assembly.GetExecutingAssembly().Location + ".lic", lic.SignedString)
                LicenseManager.Reset()
            End If
            licClient.Close()
        Catch ex As CommunicationException
            Console.WriteLine("EXCEPTION: " + ex.Message)
            licClient.Abort()
        End Try
    End Sub
		]]></code>
        <alert class="Note">
        Use "try...catch" block instead of "using" statement. For more information, see <externalLink><linkText>Avoiding Problems with the Using Statement</linkText><linkUri>http://msdn.microsoft.com/en-us/library/aa355056.aspx</linkUri></externalLink></alert>
      </content>
    </section>
    <section address="Section2">
      <title>Configure License Client</title>
      <content>
        <codeEntityReference>T:DevZest.Licensing.LicenseClient</codeEntityReference> class is a WCF client and needs to
    be configured to work with the license publisher. Refer to WCF documentation for more information.
    </content>
      <sections>
        <section>
          <title>Configure for license publisher hosted as .asmx web service</title>
          <content>
            <para>The following configuration file demostrates how to configure license client for license publisher hosted as
        .asmx web service (the endpoint address needs to be replaced with the actual one of course):</para>
            <code lang="XML" title="App.Config"><![CDATA[
<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <system.serviceModel>
    <bindings>
      <customBinding>
        <binding name="LicensePublisherSoap12">
          <textMessageEncoding messageVersion="Soap12" writeEncoding="utf-8" />
          <httpTransport />
        </binding>
      </customBinding>
    </bindings>
    <client>
      <endpoint
        address="http://localhost:16885/AsmxPublisher.asmx"
        binding="customBinding" bindingConfiguration="LicensePublisherSoap12"
        contract="DevZest.Licensing.ILicensePublisher" />      
    </client>
  </system.serviceModel>
</configuration>
		]]></code>
          </content>
        </section>
        <section>
          <title>Configure for license publisher hosted as .svc WCF service</title>
          <content>
            <para>The following configuration file demostrates how to configure license client for license publisher hosted as
        .svc WCF service (the endpoint address needs to be replaced with the actual one of course):</para>
            <code lang="XML" title="App.Config"><![CDATA[
<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <system.serviceModel>
    <client>
      <endpoint
        address="http://localhost:16885/SvcPublisher.svc"
        binding="wsHttpBinding"
        contract="DevZest.Licensing.ILicensePublisher" />
    </client>
  </system.serviceModel>
</configuration>
        ]]></code>
          </content>
        </section>
      </sections>
    </section>
    <section address="Section3">
      <title>Integrate License Client with Your Software Product</title>
      <content>
        <para>Here is the guideline on how to integrate the license client with your software product:</para>
        <list class="bullet">
          <listItem>If your software product is an executable application, integrate the license client within the executable.
      A typical implementation is: when your application started, check the license. If there is no license granted, display
      the user interface to activate your product (evaluate without a license key or register with a license key), then get a license
      from license publisher through license client. The <link xlink:href="49a89619-6d5d-478a-b3b7-df7fb51bb07d" /> demonstrates
      how to integrate the license client this way.</listItem>
          <listItem>If your software product is not an executable application such as a component, develop an executable application
      to manage the license and distribute this application together with your product. The license client is integrated into this
      application and your end user can then use this application to manage licenses. The <link xlink:href="a60a0886-5cb1-4c10-8c1d-ff2884c6fc0c" />
      demonstrates how to integrate the license client this way.</listItem>
        </list>
      </content>
    </section>
    <relatedTopics>
      <!-- One or more of the following:
         - A local link
         - An external link
         - A code entity reference

    <link xlink:href="Other Topic's ID"/>
    <link xlink:href="Other Topic's ID">Link inner text</link>

    <externalLink>
        <linkText>Link text</linkText>
        <linkAlternateText>Optional alternate link text</linkAlternateText>
        <linkUri>URI</linkUri>
    </externalLink>

    <codeEntityReference>API member ID</codeEntityReference>

    Examples:

    <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8270" />
    <link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

    <externalLink>
        <linkText>SHFB on CodePlex</linkText>
        <linkAlternateText>Go to CodePlex</linkAlternateText>
        <linkUri>http://www.codeplex.com/SHFB</linkUri>
    </externalLink>

    <codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
    <codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
    <codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
    -->
    </relatedTopics>
  </developerConceptualDocument>
</topic>