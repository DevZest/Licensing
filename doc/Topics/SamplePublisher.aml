<?xml version="1.0" encoding="utf-8"?>
<topic id="08fe0a9b-4f1b-4745-b9ce-4c83dc753daa" revisionNumber="1">
  <developerWalkthroughDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
    <introduction>
      <para>This walkthrough creates the <application>SamplePublisher</application>, the web
    service publishes the license.</para>
    </introduction>
    <section>
      <title>C#</title>
      <content>
        <procedure>
          <title>Create <application>SamplePublisher</application> Project</title>
          <steps class="ordered">
            <step>
              <content>
                <para>In <ui>Solution Explorer</ui>, right click the <ui>QuickStart</ui> solution,
              select <ui>Add</ui> -&gt; <ui>New Project...</ui>:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher1_Cs" />
                </mediaLink>
                <para>In left side <ui>Project types</ui>, select <ui>Visual C#</ui> -&gt;
	          <ui>Web</ui>, then select <ui>ASP .Net Web Application</ui> in <ui>Templates</ui>.
	          Enter <userInput>SamplePublisher</userInput> as <ui>Name</ui>.</para>
                <para>A <ui>SamplePublisher</ui> ASP .Net web project created.</para>
              </content>
            </step>
            <step>
              <content>
                <para>Right click the created <ui>SamplePublisher</ui> project in <ui>Solution Explorer</ui>,
              select <ui>Add</ui> -&gt; <ui>Existing Item:</ui>:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher2" />
                </mediaLink>
                <para>Navigate to the file key.snk previously created, click the drop down arrow of button
              <ui>Add</ui>, then click <ui>Add as Link</ui>.</para>
              </content>
            </step>
            <step>
              <content>
                <para>Right click <ui>key.snk</ui> in <ui>Samplepublisher</ui>
              project, select <ui>Properties</ui>:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher3" />
                </mediaLink>
                <para>set the <ui>Build Action</ui> as <userInput>Embedded Resource</userInput>.</para>
              </content>
            </step>
            <step>
              <content>
                <para>Right click <ui>SamplePublisher</ui> project in <ui>Solution Explorer</ui>,
              select <ui>Properties</ui>.</para>
                <para>In <ui>Signing</ui> tab:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher4" />
                </mediaLink>
                <para>Check <ui>Sign the assembly</ui>, select the previously added <ui>key.snk</ui> file
              from <ui>Choose a strong name key file</ui>.</para>
                <para>In <ui>Web</ui> tab: </para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher5" />
                </mediaLink>
                <para>Enter port number <userInput>16885</userInput> under
              <ui>Servers</ui> -&gt; <ui>Use Visual Stuido Development Server</ui> -&gt; 
              <ui>Specific port</ui>. This port number will be used in <application>SampleApp</application>
              configuration file.</para>
              </content>
            </step>
          </steps>
        </procedure>
        <procedure>
          <title>Add reference to WindowsBase assembly and DevZest.Licensing.dll assembly</title>
          <steps class="ordered">
            <step>
              <content>
                <para>In <ui>Solution Explorer</ui>, right click <ui>SamplePublisher</ui> project,
              select <ui>References...</ui></para>
                <para>Under <ui>.NET</ui> tab:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher6" />
                </mediaLink>
                <para>Browse to assembly <ui>WindowsBase</ui>, and click button <ui>OK</ui>.</para>
                <para>Under <ui>Browse</ui> tab:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher7" />
                </mediaLink>
                <para>Browse to file <ui>DevZest.Licensing.dll</ui> and click button <ui>OK</ui>. This file
              is installed in the <localUri>C:\Program Files\DevZest\.Net Licensing\<replacable>1.0</replacable></localUri>
              folder by default.
              </para>
              </content>
            </step>
          </steps>
        </procedure>
        <procedure>
          <title>Add a new class <userInput>Publisher.cs</userInput> to the project:</title>
          <steps class="ordered">
            <step>
              <content>
                <para>In <ui>Solution Explorer</ui>, right click <ui>SamplePublisher</ui> project,
              select <ui>Add New Item...</ui>:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher8_Cs" />
                </mediaLink>
                <para>In left side <ui>Categories</ui>, select <ui>Visual C#</ui> -&gt;
	          <ui>Code</ui>, then select <ui>Code File</ui> in <ui>Templates</ui>.
	          Enter <userInput>Publisher.cs</userInput> as <ui>Name</ui>.</para>
              </content>
            </step>
            <step>
              <content>
                <para>Enter code in file <ui>Publisher.cs</ui>:</para>
                <code lang="C#"><![CDATA[
using System;
using System.Diagnostics;
using System.Collections.Generic;
using DevZest.Licensing;
using System.IO;
using System.Web.Services;
using System.Reflection;
using System.Globalization;

namespace SamplePublisher
{
    public class Publisher : LicensePublisher
    {
        // The AssemblyProduct attribute of SampleApp
        private const string Product = "SampleApp";

        // The license item names
        private static class LicenseItems
        {
            public const string Feature1 = "Feature1";
            public const string Feature2 = "Feature2";
        }

        private enum LicenseCategory
        {
            ExpiredEvaluation = 0,
            Evaluation,
            Registered
        }

        private static LicenseKey[] s_licenseKeys = {
        new LicenseKey("6VL8P-QHCRS-PF2GJ-8XLYG-VKHH4"),
        new LicenseKey("ZSWPT-Q3QV8-V9MM9-4WVFA-9Z9CQ"),
        new LicenseKey("XYDSY-LSKC5-9XVSJ-3QYLT-MALBQ") };

        protected override string GetPrivateKeyXml(string product)
        {
            // Load the private key file from current assembly's embedded resource.
            // Note the resource name is namespace + file name, and it's CASE SENSITIVE.
            // If wrong resource name provided, PrivateKeyXmlFromSnkFile throws ArgumentNullException!        
            using (Stream stream = Assembly.GetExecutingAssembly().GetManifestResourceStream("SamplePublisher.Key.snk"))
            {
                return PrivateKeyXmlFromSnkFile(stream);
            }

        }

        protected override LicensePublisherResponse GetLicense(CultureInfo cultureInfo, string product, Version version, LicenseKey licenseKey, string category, string userName, string company, string emailAddress, string data)
        {
            // Check the product
            if (product != Product)
                return new LicensePublisherResponse("Invalid product!");

            // Check the license key and category
            LicenseCategory? licenseCategory = null;
            for (int i = 0; i < s_licenseKeys.Length; i++)
            {
                if (s_licenseKeys[i] == licenseKey)
                {
                    licenseCategory = (LicenseCategory)i;
                    break;
                }
            }
            if (!licenseCategory.HasValue)
                return new LicensePublisherResponse("Invalid license key!");
            if (licenseCategory.ToString() != category)
                return new LicensePublisherResponse("Invalid category!");

            License license = new MachineLicense();
            license.Product = Product;
            license.Category = category;
            license.UserName = userName;
            license.Company = company;
            license.Data = data;
            license.Items.Add(new LicenseItem(LicenseItems.Feature1, true));  // Feature1's OverrideExpirationDate is true
            license.Items.Add(new LicenseItem(LicenseItems.Feature2));

            if (licenseCategory == LicenseCategory.Evaluation)
                license.SetExpirationDate(DateTime.UtcNow.AddMonths(3));
            else if (licenseCategory == LicenseCategory.ExpiredEvaluation)
                license.SetExpirationDate(DateTime.UtcNow); // Set ExpirationDate to now always expires the license

            return new LicensePublisherResponse(license);
        }
    }
}
]]></code>
              </content>
            </step>
          </steps>
        </procedure>
        <procedure>
          <title>Add <userInput>AsmxPublisher.asmx</userInput> to the project</title>
          <steps class="ordered">
            <step>
              <content>
                <para>In <ui>Solution Explorer</ui>, right click <ui>SamplePublisher</ui> project,
              select <ui>Add New Item...</ui>:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher9_Cs" />
                </mediaLink>
                <para>In left side <ui>Categories</ui>, select <ui>Visual C#</ui> -&gt;
	          <ui>Web</ui>, then select <ui>Web Service</ui> in <ui>Templates</ui>.
	          Enter <userInput>AsmxPublisher.asmx</userInput> as <ui>Name</ui>.</para>
              </content>
            </step>
            <step>
              <content>
                <para>Enter code in file <userInput>AsmxPublisher.asmx.cs</userInput>:</para>
                <code lang="C#"><![CDATA[
using System;
using System.Web;
using System.Web.Services;

namespace SamplePublisher
{
    [WebService(Namespace = "http://services.devzest.com/Licensing")]
    public class AsmxPublisher : Publisher
    {
    }
}
]]></code>
              </content>
            </step>
          </steps>
        </procedure>
        <procedure>
          <title>Add <userInput>SvcPublisher.svc</userInput> to the project</title>
          <steps class="ordered">
            <step>
              <content>
                <para>In <ui>Solution Explorer</ui>, right click <ui>SamplePublisher</ui> project,
              select <ui>Add New Item...</ui>:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisherA_Cs" />
                </mediaLink>
                <para>In left side <ui>Categories</ui>, select <ui>Visual C#</ui>, then select <ui>WCF Service</ui> in <ui>Templates</ui>.
	          Enter <userInput>SvcPublisher.svc</userInput> as <ui>Name</ui>.</para>
              </content>
            </step>
            <step>
              <content>Delete the auto generated file <ui>ISvcPublisher.cs</ui> by right clicking this
            file in <ui>Solution Explorer</ui>, then select <ui>Delete</ui> from the context menu.</content>
            </step>
            <step>
              <content>
                <para>Enter code in <userInput>SvcPublisher.svc.cs</userInput>:</para>
                <code lang="C#"><![CDATA[
using System;
using System.ServiceModel;

namespace SamplePublisher
{
    public class SvcPublisher : Publisher
    {
    }
}
]]></code>
              </content>
            </step>
            <step>
              <content>
                <para>Update <userInput>Web.config</userInput>:</para>
                <code lang="XML" title="Web.config"><![CDATA[
 <system.serviceModel>
  <behaviors>
   <serviceBehaviors>
    <behavior name="SamplePublisher.SvcPublisherBehavior">
     <serviceMetadata httpGetEnabled="true" />
     <serviceDebug includeExceptionDetailInFaults="false" />
    </behavior>
   </serviceBehaviors>
  </behaviors>
  <services>
   <service behaviorConfiguration="SamplePublisher.SvcPublisherBehavior" name="SamplePublisher.SvcPublisher">
    <endpoint binding="wsHttpBinding" contract="DevZest.Licensing.ILicensePublisher" />
    <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
   </service>
  </services>
 </system.serviceModel>
]]></code>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>
    <section>
      <title>Visual Basic</title>
      <content>
        <procedure>
          <title>Create <application>SamplePublisher</application> Project</title>
          <steps class="ordered">
            <step>
              <content>
                <para>In <ui>Solution Explorer</ui>, right click the <ui>QuickStart</ui> solution,
              select <ui>Add</ui> -&gt; <ui>New Project...</ui>:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher1_Vb" />
                </mediaLink>
                <para>In left side <ui>Project types</ui>, select <ui>Visual Basic</ui> -&gt;
	          <ui>Web</ui>, then select <ui>ASP .Net Web Application</ui> in <ui>Templates</ui>.
	          Enter <userInput>SamplePublisher</userInput> as <ui>Name</ui>.</para>
                <para>A <ui>SamplePublisher</ui> ASP .Net web project created.</para>
              </content>
            </step>
            <step>
              <content>
                <para>Right click the created <ui>SamplePublisher</ui> project in <ui>Solution Explorer</ui>,
              select <ui>Add</ui> -&gt; <ui>Existing Item:</ui>:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher2" />
                </mediaLink>
                <para>Navigate to the file key.snk previously created, click the drop down arrow of button
              <ui>Add</ui>, then click <ui>Add as Link</ui>.</para>
              </content>
            </step>
            <step>
              <content>
                <para>Right click <ui>key.snk</ui> in <ui>Samplepublisher</ui>
              project, select <ui>Properties</ui>:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher3" />
                </mediaLink>
                <para>set the <ui>Build Action</ui> as <userInput>Embedded Resource</userInput>.</para>
              </content>
            </step>
            <step>
              <content>
                <para>Right click <ui>SamplePublisher</ui> project in <ui>Solution Explorer</ui>,
              select <ui>Properties</ui>.</para>
                <para>In <ui>Signing</ui> tab:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher4" />
                </mediaLink>
                <para>Check <ui>Sign the assembly</ui>, select the previously added <ui>key.snk</ui> file
              from <ui>Choose a strong name key file</ui>.</para>
                <para>In <ui>Web</ui> tab: </para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher5" />
                </mediaLink>
                <para>Enter port number <userInput>16885</userInput> under
              <ui>Servers</ui> -&gt; <ui>Use Visual Stuido Development Server</ui> -&gt; 
              <ui>Specific port</ui>. This port number will be used in <application>SampleApp</application>
              configuration file.</para>
              </content>
            </step>
          </steps>
        </procedure>
        <procedure>
          <title>Add reference to WindowsBase assembly and DevZest.Licensing.dll assembly</title>
          <steps class="ordered">
            <step>
              <content>
                <para>In <ui>Solution Explorer</ui>, right click <ui>SamplePublisher</ui> project,
              select <ui>References...</ui></para>
                <para>Under <ui>.NET</ui> tab:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher6" />
                </mediaLink>
                <para>Browse to assembly <ui>WindowsBase</ui>, and click button <ui>OK</ui>.</para>
                <para>Under <ui>Browse</ui> tab:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher7" />
                </mediaLink>
                <para>Browse to file <ui>DevZest.Licensing.dll</ui> and click button <ui>OK</ui>. This file
              is installed in the <localUri>C:\Program Files\DevZest\.Net Licensing\<replacable>1.0</replacable></localUri>
              folder by default.
              </para>
              </content>
            </step>
          </steps>
        </procedure>
        <procedure>
          <title>Add new class Publisher.vb to the project</title>
          <steps class="ordered">
            <step>
              <content>
                <para>In <ui>Solution Explorer</ui>, right click <ui>SamplePublisher</ui> project,
              select <ui>Add New Item...</ui>:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher8_Vb" />
                </mediaLink>
                <para>In left side <ui>Categories</ui>, select <ui>Visual Basic</ui> -&gt;
	          <ui>Code</ui>, then select <ui>Class</ui> in <ui>Templates</ui>.
	          Enter <userInput>Publisher.vb</userInput> as <ui>Name</ui>.</para>
              </content>
            </step>
            <step>
              <content>
                <para>Enter code in file <ui>Publisher.vb</ui>:</para>
                <code lang="VB.Net"><![CDATA[
Imports System
Imports System.Diagnostics
Imports System.Collections.Generic
Imports DevZest.Licensing
Imports System.IO
Imports System.Web.Services
Imports System.Reflection
Imports System.Globalization


<WebService(Namespace:="http://services.devzest.com/Licensing")> _
Public Class Publisher
    Inherits LicensePublisher

    'The AssemblyProduct attribute of SampleApp
    Private Const Product As String = "SampleApp"

    'The license item names
    Private NotInheritable Class LicenseItems
        Public Const Feature1 As String = "Feature1"
        Public Const Feature2 As String = "Feature2"
    End Class

    Private Enum LicenseCategory
        ExpiredEvaluation = 0
        Evaluation
        Registered
    End Enum


    Private Shared s_licenseKeys As LicenseKey() = { _
        New LicenseKey("6VL8P-QHCRS-PF2GJ-8XLYG-VKHH4"), _
        New LicenseKey("ZSWPT-Q3QV8-V9MM9-4WVFA-9Z9CQ"), _
        New LicenseKey("XYDSY-LSKC5-9XVSJ-3QYLT-MALBQ")}

    Protected Overrides Function GetPrivateKeyXml(ByVal product As String) As String
        ' Load the private key file from current assembly's embedded resource.
        ' Note the resource name is namespace + file name, and it's CASE SENSITIVE.
        ' If wrong resource name provided, PrivateKeyXmlFromSnkFile throws ArgumentNullException!    
        Using stream As Stream = Assembly.GetExecutingAssembly().GetManifestResourceStream("SamplePublisher.Key.snk")
            Return PrivateKeyXmlFromSnkFile(stream)
        End Using
    End Function

    Protected Overrides Function GetLicense(ByVal cultureInfo As CultureInfo, ByVal product As String, ByVal version As Version, ByVal licenseKey As LicenseKey, ByVal category As String, ByVal userName As String, ByVal company As String, ByVal emailAddress As String, ByVal data As String) As LicensePublisherResponse
        'Check the product
        If product <> Publisher.Product Then
            Return New LicensePublisherResponse("Invalid product!")
        End If

        'Check the license key and category
        Dim licenseCategory As Nullable(Of LicenseCategory) = Nothing
        For i As Integer = 0 To s_licenseKeys.Length - 1
            If s_licenseKeys(i) = licenseKey Then
                licenseCategory = CType(i, LicenseCategory)
                Exit For
            End If
        Next

        If Not licenseCategory.HasValue Then
            Return New LicensePublisherResponse("Invalid license key!")
        End If
        If licenseCategory.ToString() <> category Then
            Return New LicensePublisherResponse("Invalid category!")
        End If

        Dim license As License = New MachineLicense()
        license.Product = product
        license.Category = category
        license.UserName = userName
        license.Company = company
        license.Data = data
        license.Items.Add(New LicenseItem(LicenseItems.Feature1, True))  'Feature1's OverrideExpirationDate is true
        license.Items.Add(New LicenseItem(LicenseItems.Feature2))

        If licenseCategory = Publisher.LicenseCategory.Evaluation Then
            license.SetExpirationDate(DateTime.UtcNow.AddMonths(3))
        ElseIf licenseCategory = Publisher.LicenseCategory.ExpiredEvaluation Then
            license.SetExpirationDate(DateTime.UtcNow) 'Set ExpirationDate to now always expires the license
        End If

        Return New LicensePublisherResponse(license)
    End Function

End Class
]]></code>
              </content>
            </step>
          </steps>
        </procedure>
        <procedure>
          <title>Add AsmxPublisher.asmx to the project</title>
          <steps class="ordered">
            <step>
              <content>
                <para>In <ui>Solution Explorer</ui>, right click <ui>SamplePublisher</ui> project,
              select <ui>Add New Item...</ui>:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisher9_Vb" />
                </mediaLink>
                <para>In left side <ui>Categories</ui>, select <ui>Visual Basic</ui> -&gt;
	          <ui>Web</ui>, then select <ui>Web Service</ui> in <ui>Templates</ui>.
	          Enter <userInput>AsmxPublisher.asmx</userInput> as <ui>Name</ui>.</para>
              </content>
            </step>
            <step>
              <content>
                <para>Enter code in file <ui>AsmxPublisher.asmx.vb</ui>:</para>
                <code lang="VB.Net"><![CDATA[
Imports System.Web.Services

<WebService(Namespace:="http://services.devzest.com/Licensing")> _
Public Class AsmxPublisher
    Inherits Publisher

End Class
]]></code>
              </content>
            </step>
          </steps>
        </procedure>
        <procedure>
          <title>Add <userInput>SvcPublisher.svc</userInput> to the project</title>
          <steps class="ordered">
            <step>
              <content>
                <para>In <ui>Solution Explorer</ui>, right click <ui>SamplePublisher</ui> project,
              select <ui>Add New Item...</ui>:</para>
                <mediaLink>
                  <image xlink:href="QuickStartSamplePublisherA_Vb" />
                </mediaLink>
                <para>In left side <ui>Categories</ui>, select <ui>Visual Basic</ui>, then select <ui>WCF Service</ui> in <ui>Templates</ui>.
	          Enter <userInput>SvcPublisher.svc</userInput> as <ui>Name</ui>.</para>
              </content>
            </step>
            <step>
              <content>Delete the auto generated file <ui>ISvcPublisher.vb</ui> by right clicking this
            file in <ui>Solution Explorer</ui>, then select <ui>Delete</ui> from the context menu.</content>
            </step>
            <step>
              <content>
                <para>Enter code in <userInput>SvcPublisher.svc.vb</userInput>:</para>
                <code lang="VB.Net"><![CDATA[
Public Class SvcPublisher
    Inherits Publisher

End Class
]]></code>
              </content>
            </step>
            <step>
              <content>
                <para>Update <userInput>Web.config</userInput>:</para>
                <code lang="XML" title="Web.config"><![CDATA[
 <system.serviceModel>
  <behaviors>
   <serviceBehaviors>
    <behavior name="SamplePublisher.SvcPublisherBehavior">
     <serviceMetadata httpGetEnabled="true" />
     <serviceDebug includeExceptionDetailInFaults="false" />
    </behavior>
   </serviceBehaviors>
  </behaviors>
  <services>
   <service behaviorConfiguration="SamplePublisher.SvcPublisherBehavior" name="SamplePublisher.SvcPublisher">
    <endpoint binding="wsHttpBinding" contract="DevZest.Licensing.ILicensePublisher" />
    <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
   </service>
  </services>
 </system.serviceModel>
]]></code>
              </content>
            </step>
          </steps>
        </procedure>
      </content>
    </section>
  </developerWalkthroughDocument>
</topic>